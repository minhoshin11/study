/*
test003. 덧셈 연산자 및 형 변환
 */

// 덧셈 연산자(+)
// 피 연산자 중 어느 하나라도 문자열 형태의 데이터가 존재한다면
// 산술연산자로써의 기능을 수행하는 것이 아니라
// 문자열 결합 연산자로써의 기능을 수행한다.
// 처리 결과는 문자열의 형태로 변환된다.

let a = 10;
let b = 20;
console.log("a의 값은 " + a + "입니다."); // a의 값은 10입니다.
console.log("b의 값: ", b); // b의 값:  20

console.log(1 + 2); // 산술 연산자
console.log("1" + 2); // 문자열 결합 연산자

console.log("----------------------");

console.log("100" + 50); // 10050
// 문자열 결합 연산자

console.log("100" - 50); // 50
// 숫자 타입의 50이 출력된다.
// JavaScript는 자동으로 문자열을 숫자로 변환하여 계산을 수행한다.
// 이를 '암시적 형 변환(Type Coercion)'이라고 한다.
// 즉 문자열 "100"이 숫자 100으로 변환이 된다.
// 이 암시적 형 변환때문에 NaN이 아닌 연산의 결과가 출력된다.

console.log(100 / '50'); // 2

console.log("----------------------");

let value;

// 숫자를 문자열로 변환
value = String(123); // "123"

// 불리언을 문자열로 변환
value = String(true); // "true"

// 문자열을 숫자로 변환
value = Number("123"); // 123

// 불리언을 숫자로 변환
value = Number(false); // 0
// true는 1 / false는 0
// 컴퓨터 언어는 0과 1(이진수)로 이루어져있는데
// 이는 사실 전기가 흐르는지 흐르지 않는지 구분
// 즉 전기가 흐르면 1이고 이는 true 
// 전기가 흐르지 않으면 0 이고 이는 false 이다.
// (완전 디테일하게는 1은 높은 전압, 0은 낮은 전압. 전압의 상태를 나타냄)

// 숫자를 불리언으로 변환 (0과 NaN 이외의 모든 숫자는 true)
value = Boolean(123); // true

// 문자열을 불리언으로 변환 (빈 문자열 이외는 모두 true)
value = Boolean("hello"); // true

